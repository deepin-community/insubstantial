dependencies {
  compile project(":trident")
  testCompile group: 'com.jgoodies', name: 'forms', version: '1.2.0'
  testCompile group: 'junit', name: 'junit', version: '4.3.1'
  testCompile group: 'org.easytesting', name: 'fest-assert', version: '1.2'
  testCompile group: 'org.easytesting', name: 'fest-reflect', version: '1.2'
  testCompile group: 'org.easytesting', name: 'fest-swing', version: '1.2.1'
  testCompile group: 'org.easytesting', name: 'fest-swing-junit', version: '1.2.1'
  testCompile group: 'org.easytesting', name: 'fest-swing-junit-4.3.1', version: '1.2.1'
}

sourceSets {
  main
  test
}

test {
  // if we are headless, don't run our tests
  enabled = !Boolean.getBoolean("java.awt.headless")
}

jar {
  manifest {
    attributes(
        "Flamingo-Version": version,
        "Flamingo-VersionName": versionKey,
    )
  }
}

task testJar(type: Jar) {
  classifier = 'tst'

  from sourceSets.test.output

  manifest {
    attributes(
        "Flamingo-Version": version,
        "Flamingo-VersionName": versionKey,
    )
  }
}

uploadPublished {
  repositories {
    mavenDeployer {
      configurePOM(pom)
    }
  }
}

install {
  configurePOM(repositories.mavenInstaller.pom)
}

private def configurePOM(def pom) {
  configureBasePom(pom)
  pom.project {
    name "flamingo"
    description "A fork of @kirilcool's flamingo project"
    url "http://insubstantial.github.com/insubstantial/flamingo/"
    licenses {
      license {
        name 'The BSD License'
        url 'http://www.opensource.org/licenses/bsd-license.php'
        distribution 'repo'
      }
    }
  }
  // deal with a gradle bug where transitive=false is not passed into the generated POM
  pom.whenConfigured {cpom ->
    cpom.dependencies.each {dep ->
      switch (dep.artifactId) {
        case 'trident':
          dep.classifier = 'swing'
          break
      }
    }
  }
}

task testRibbon(type: JavaExec) {
    main = 'test.ribbon.BasicCheckRibbon'
    debug = Boolean.valueOf(System.getProperty('debug', 'false'))
    classpath = sourceSets.test.runtimeClasspath
}

task testRibbonRTL(type: JavaExec) {
    main = 'test.ribbon.BasicCheckRibbon'
    debug = Boolean.valueOf(System.getProperty('debug', 'false'))
    classpath = sourceSets.test.runtimeClasspath
    systemProperty "user.language", "iw"
}
